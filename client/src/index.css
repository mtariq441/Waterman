@tailwind base;
@tailwind components;
@tailwind utilities;

/* THE WATERMAN - LIGHT THEME */
:root {
  --button-outline: rgba(11, 60, 136, .15);
  --badge-outline: rgba(11, 60, 136, .08);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: 10; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(30, 115, 190, .05);
  --elevate-2: rgba(30, 115, 190, .10);

  /* Light Theme Backgrounds */
  --background: 0 0% 100%;  /* #FFFFFF - White background */

  --foreground: 0 0% 20%;  /* #333333 - Dark gray text */

  --border: 0 0% 88%;  /* #E0E0E0 - Light gray borders */

  --card: 0 0% 100%;  /* #FFFFFF - White card background */

  --card-foreground: 0 0% 20%;  /* #333333 - Dark text on cards */

  --card-border: 189 100% 38%;  /* #009FC2 - Aqua blue accent border */

  --sidebar: 0 0% 98%;

  --sidebar-foreground: 0 0% 20%;

  --sidebar-border: 0 0% 88%;

  --sidebar-primary: 216 89% 29%;  /* #0B3C88 - Primary Blue */

  --sidebar-primary-foreground: 0 0% 100%;

  --sidebar-accent: 0 0% 96%;

  --sidebar-accent-foreground: 0 0% 20%;

  --sidebar-ring: 203 73% 44%;

  --popover: 0 0% 100%;

  --popover-foreground: 0 0% 20%;

  --popover-border: 0 0% 88%;

  --primary: 203 73% 44%;  /* #1E73BE - Accent Blue for CTAs */

  --primary-foreground: 0 0% 100%;

  --secondary: 0 0% 96%;  /* #F5F5F5 - Light gray */

  --secondary-foreground: 0 0% 20%;

  --muted: 0 0% 96%;  /* #F5F5F5 - Light gray background */

  --muted-foreground: 0 0% 45%;  /* #737373 - Medium gray text */

  --accent: 189 100% 38%;  /* #009FC2 - Aqua Blue for accents */

  --accent-foreground: 0 0% 100%;

  --destructive: 0 72% 45%;

  --destructive-foreground: 0 0% 100%;

  --input: 0 0% 88%;
  --ring: 203 73% 44%;
  --chart-1: 203 73% 44%;
  --chart-2: 189 100% 38%;
  --chart-3: 216 89% 29%;
  --chart-4: 203 45% 60%;
  --chart-5: 216 60% 50%;

  --font-sans: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px for clean feel */
  --shadow-2xs: 0px 1px 2px 0px rgba(0, 0, 0, 0.05);
  --shadow-xs: 0px 1px 3px 0px rgba(0, 0, 0, 0.08);
  --shadow-sm: 0px 2px 4px 0px rgba(0, 0, 0, 0.06), 0px 1px 2px -1px rgba(0, 0, 0, 0.08);
  --shadow: 0px 4px 8px -1px rgba(0, 0, 0, 0.10), 0px 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-md: 0px 6px 16px -2px rgba(0, 0, 0, 0.12), 0px 3px 6px -2px rgba(0, 0, 0, 0.08);
  --shadow-lg: 0px 10px 24px -4px rgba(0, 0, 0, 0.15), 0px 4px 8px -2px rgba(0, 0, 0, 0.10);
  --shadow-xl: 0px 20px 32px -6px rgba(0, 0, 0, 0.18), 0px 8px 16px -4px rgba(0, 0, 0, 0.12);
  --shadow-2xl: 0px 25px 50px -12px rgba(0, 0, 0, 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-bold;
  }
}

/* Premium UI utilities */
@layer utilities {
  .accent-glow {
    box-shadow: 0 2px 8px rgba(0, 159, 194, 0.1);
  }

  .accent-glow-hover:hover {
    box-shadow: 0 4px 12px rgba(0, 159, 194, 0.15);
  }

  .accent-border-left {
    border-left: 2px solid hsl(var(--accent));
  }

  .accent-border-top {
    border-top: 2px solid hsl(var(--accent));
  }

  .glass-card {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .premium-shadow {
    box-shadow: 0 20px 60px rgba(11, 60, 136, 0.15);
  }

  .premium-shadow-lg {
    box-shadow: 0 30px 80px rgba(11, 60, 136, 0.2);
  }

  .premium-card {
    background: rgba(255, 255, 255, 0.98);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(11, 60, 136, 0.1);
    box-shadow: 0 8px 32px rgba(11, 60, 136, 0.12);
  }

  .premium-glass {
    background: rgba(255, 255, 255, 0.08);
    backdrop-filter: blur(24px);
    border: 1px solid rgba(255, 255, 255, 0.18);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
  }

  .premium-gradient-border {
    position: relative;
    background: linear-gradient(to bottom, rgba(255,255,255,0.95), rgba(255,255,255,1));
    border: 1px solid transparent;
  }

  .premium-gradient-border::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 1px;
    background: linear-gradient(135deg, rgba(0,159,194,0.3), rgba(30,115,190,0.3));
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }

  .watermark-pattern {
    background-image: 
      radial-gradient(circle at 25% 25%, rgba(0, 159, 194, 0.03) 0%, transparent 50%),
      radial-gradient(circle at 75% 75%, rgba(11, 60, 136, 0.03) 0%, transparent 50%);
  }

  .premium-section-bg {
    position: relative;
    background: linear-gradient(135deg, #f8fafc 0%, #ffffff 50%, #f1f5f9 100%);
  }

  .premium-section-bg::before {
    content: '';
    position: absolute;
    inset: 0;
    background: 
      radial-gradient(circle at 20% 30%, rgba(0, 159, 194, 0.04) 0%, transparent 40%),
      radial-gradient(circle at 80% 70%, rgba(30, 115, 190, 0.04) 0%, transparent 40%);
    pointer-events: none;
  }

  .gradient-border {
    position: relative;
  }

  .gradient-border::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 2px;
    border-radius: inherit;
    background: linear-gradient(135deg, #009FC2, #1E73BE);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
  }

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}
